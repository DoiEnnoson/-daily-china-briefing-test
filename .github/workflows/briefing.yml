name: Daily China Briefing

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *' # Täglich um 06:00 UTC (07:00 CEST)
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Repository klonen
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Python installieren
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Abhängigkeiten installieren
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4
        continue-on-error: false

      - name: Verzeichnis WCI erstellen
        run: |
          mkdir -p WCI
        continue-on-error: true

      - name: Test-WCI-Skript ausführen
        run: python test_wci_email.py
        env:
          DREWRY: ${{ secrets.DREWRY }}
          CONFIG: ${{ secrets.CONFIG }}

      - name: Inhalte in Zusammenfassung schreiben
        run: |
          echo "## Workflow Output" >> $GITHUB_STEP_SUMMARY
          echo "### wci_test_log_*.txt" >> $GITHUB_STEP_SUMMARY
          ls wci_test_log_*.txt | sort -r | head -n 1 | xargs cat >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Keine Log-Datei gefunden" >> $GITHUB_STEP_SUMMARY
          echo "### wci_email_*.html" >> $GITHUB_STEP_SUMMARY
          cat wci_email_*.html >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Datei wci_email_*.html existiert nicht" >> $GITHUB_STEP_SUMMARY
          echo "### daily_briefing.md" >> $GITHUB_STEP_SUMMARY
          cat daily_briefing.md >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Datei daily_briefing.md existiert nicht" >> $GITHUB_STEP_SUMMARY
          echo "### WCI/wci_cache.json" >> $GITHUB_STEP_SUMMARY
          cat WCI/wci_cache.json >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo "Datei WCI/wci_cache.json existiert nicht" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Commit and push changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add wci_test_log_*.txt wci_email_*.html daily_briefing.md WCI/wci_cache.json || echo "No files to add"
          git commit -m "Update WCI cache and briefing" || echo "Nothing to commit"
          git pull --rebase origin main || echo "Pull failed, continuing"
          git push origin main || echo "Push failed"
        continue-on-error: true

      - name: Artefakte hochladen
        uses: actions/upload-artifact@v4
        with:
          name: wci-files
          path: |
            wci_test_log_*.txt
            wci_email_*.html
            daily_briefing.md
            WCI/wci_cache.json
        continue-on-error: true
