name: Daily China Briefing

on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * *' # täglich um 06:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Ermöglicht Schreibrechte für das Repository
      actions: read  # Standard-Berechtigung für Actions

    steps:
      - name: Repository klonen
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Python installieren
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Abhängigkeiten installieren
        run: |
          python -m pip install --upgrade pip
          pip install feedparser requests beautifulsoup4 lxml google-api-python-client pandas

      - name: Test-Skript für WCI-E-Mail ausführen
        run: python test_wci_email.py
        env:
          DREWRY: ${{ secrets.DREWRY }}

      - name: wci_test_log.txt Inhalt prüfen
        run: |
          echo "Inhalt von wci_test_log.txt:"
          cat wci_test_log.txt || echo "Datei wci_test_log.txt existiert nicht"
        continue-on-error: true

      - name: wci_email_*.html Inhalt prüfen
        run: |
          echo "Inhalt von wci_email_*.html:"
          cat wci_email_*.html || echo "Keine wci_email_*.html Dateien gefunden"
        continue-on-error: true

      - name: Änderungen an Log- und HTML-Dateien committen und pushen
        run: |
          git config --local user.email "action@gmx.com"
          git config --local user.name "GitHub Action"
          git add wci_test_log.txt wci_email_*.html
          git commit -m "Add wci_test_log.txt and wci_email_*.html from test run" || echo "Keine Änderungen zu committen"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
